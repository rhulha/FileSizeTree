/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileSizeTree.java
 *
 * Created on 07.11.2009, 22:35:13
 */
package com.kenai.paranoidray.fst;

import com.kenai.paranoidray.photon.Photon;
import java.awt.Color;
import java.awt.Dimension;
import java.io.File;
import java.util.LinkedList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Ray
 */
public class FileSizeTree extends javax.swing.JFrame {
    final JFreeChart chart;
    final DefaultPieDataset dataset;

    /** Creates new form FileSizeTree */
    public FileSizeTree() {
        initComponents();
        this.setLocationRelativeTo(null);
        DefaultTreeCellRenderer dtcr = (DefaultTreeCellRenderer) fileSizeTree.getCellRenderer();
        dtcr.setLeafIcon(dtcr.getClosedIcon());

        DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
        renderer.setLeafIcon(renderer.getClosedIcon());
        fileSizeTree.setCellRenderer(renderer);

        dataset = FSTUtil.createSampleDataset();

        // create the chart...
        chart = FSTUtil.createChart(dataset);

        // add the chart to a panel...
        final ChartPanel chartPanel = new ChartPanel(chart);
        //chartPanel.setPreferredSize(new java.awt.Dimension(500, 270));

        jPanelChart.add(chartPanel);
        this.pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItemSort = new javax.swing.JMenuItem();
        jMenuItemPhoton = new javax.swing.JMenuItem();
        jPanelTop = new javax.swing.JPanel();
        jTextFieldPath = new javax.swing.JTextField();
        jButtonSelectPath = new javax.swing.JButton();
        jSplitPaneMain = new javax.swing.JSplitPane();
        jScrollPaneForTree = new javax.swing.JScrollPane();
        fileSizeTree = new javax.swing.JTree();
        jPanelChart = new javax.swing.JPanel();

        jMenuItemSort.setText("Sort this level");
        jMenuItemSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSortActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemSort);

        jMenuItemPhoton.setText("Start Photon");
        jMenuItemPhoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPhotonActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemPhoton);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FileSizeTree");
        setMinimumSize(new java.awt.Dimension(800, 600));

        jPanelTop.setPreferredSize(new java.awt.Dimension(578, 30));
        jPanelTop.setLayout(new java.awt.BorderLayout());
        jPanelTop.add(jTextFieldPath, java.awt.BorderLayout.CENTER);

        jButtonSelectPath.setText("...");
        jButtonSelectPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectPathActionPerformed(evt);
            }
        });
        jPanelTop.add(jButtonSelectPath, java.awt.BorderLayout.LINE_END);

        getContentPane().add(jPanelTop, java.awt.BorderLayout.PAGE_START);

        jSplitPaneMain.setDividerLocation(200);
        jSplitPaneMain.setDividerSize(3);
        jSplitPaneMain.setResizeWeight(0.5);
        jSplitPaneMain.setContinuousLayout(true);

        fileSizeTree.setModel(null);
        fileSizeTree.setComponentPopupMenu(jPopupMenu1);
        fileSizeTree.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
            public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
            }
            public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
                fileSizeTreeTreeExpanded(evt);
            }
        });
        fileSizeTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                fileSizeTreeValueChanged(evt);
            }
        });
        jScrollPaneForTree.setViewportView(fileSizeTree);

        jSplitPaneMain.setLeftComponent(jScrollPaneForTree);

        jPanelChart.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanelChart.setLayout(new java.awt.BorderLayout());
        jSplitPaneMain.setRightComponent(jPanelChart);

        getContentPane().add(jSplitPaneMain, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelectPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectPathActionPerformed

        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(File.listRoots()[0]);
        chooser.setDialogTitle("Choose Directory");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File sf = chooser.getSelectedFile();
            jTextFieldPath.setText(sf.getPath());
            fileSizeTree.setModel(new DefaultTreeModel(new DefaultMutableTreeNode(new PathSize(sf.getName(), 0))));
            FSTUtil fst = new FSTUtil(fileSizeTree, sf);
            this.setTitle("FileSizeTree (RUNNING)");
            fileSizeTree.setBackground(Color.red);
            fst.start();

        } else {
        }

    }//GEN-LAST:event_jButtonSelectPathActionPerformed

    private void fileSizeTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_fileSizeTreeValueChanged
        // TODO add your handling code here:
        dataset.clear();
        if( fileSizeTree.getSelectionPath() == null)
            return;
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) fileSizeTree.getSelectionPath().getLastPathComponent();

        for( int i = 0; i<node.getChildCount(); i++)
        {
            PathSize ps = (PathSize) ((DefaultMutableTreeNode) node.getChildAt(i)).getUserObject();
            dataset.setValue( ps.getName(), ps.getSize());
        }

        chart.fireChartChanged();
    }//GEN-LAST:event_fileSizeTreeValueChanged

    private void jMenuItemPhotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPhotonActionPerformed
        // TODO add your handling code here:
        Photon.main(new String[]{jTextFieldPath.getText()});
    }//GEN-LAST:event_jMenuItemPhotonActionPerformed

    private void jMenuItemSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSortActionPerformed
        // TODO add your handling code here:
        if( fileSizeTree.getSelectionPath() == null)
            return;

        sortPath( fileSizeTree.getSelectionPath() );
        fileSizeTree.updateUI();
        fileSizeTreeValueChanged(null);
        
    }//GEN-LAST:event_jMenuItemSortActionPerformed

    private void fileSizeTreeTreeExpanded(javax.swing.event.TreeExpansionEvent evt) {//GEN-FIRST:event_fileSizeTreeTreeExpanded
        // TODO add your handling code here:
        sortPath( evt.getPath() );
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                fileSizeTree.updateUI();
            }
        });
        // fileSizeTree.updateUI();

        //fileSizeTreeValueChanged(null);

    }//GEN-LAST:event_fileSizeTreeTreeExpanded


    public static void sortPath( TreePath path)
    {
        sortPath( (DefaultMutableTreeNode) path.getLastPathComponent());
    }
    public static void sortPath( DefaultMutableTreeNode node)
    {
        LinkedList<DefaultMutableTreeNode> nodes = new LinkedList<DefaultMutableTreeNode>();

        for( int i = 0; i<node.getChildCount(); i++)
        {
            DefaultMutableTreeNode tobemoved = (DefaultMutableTreeNode) node.getChildAt(i);
            if( nodes.size() == 0)
                nodes.add( tobemoved);
            PathSize tobemoved_ps = (PathSize) tobemoved.getUserObject();

            for (int j = 0; j < nodes.size(); j++) {
                DefaultMutableTreeNode testNode = nodes.get(j);
                PathSize test_ps = (PathSize) testNode.getUserObject();
                if( tobemoved_ps.getSize() > test_ps.getSize() )
                {
                    nodes.add(j, tobemoved);
                    break;
                }
            }
            if( !nodes.contains(tobemoved))
                nodes.add(tobemoved);
        }

        for (int j = 0; j < nodes.size(); j++) {
            node.insert(nodes.get(j), j);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FileSizeTree().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree fileSizeTree;
    private javax.swing.JButton jButtonSelectPath;
    private javax.swing.JMenuItem jMenuItemPhoton;
    private javax.swing.JMenuItem jMenuItemSort;
    private javax.swing.JPanel jPanelChart;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPaneForTree;
    private javax.swing.JSplitPane jSplitPaneMain;
    private javax.swing.JTextField jTextFieldPath;
    // End of variables declaration//GEN-END:variables
}
